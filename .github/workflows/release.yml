name: üöÄ Build and Release OfficeLog

on:
    push:
        tags:
            - "v*.*.*"
    workflow_dispatch:
        inputs:
            version:
                description: "Version tag (e.g., v1.0.1)"
                required: true
                default: "v1.0.1"
            prerelease:
                description: "Mark as pre-release"
                required: false
                default: false
                type: boolean

jobs:
    build-and-release:
        name: üì± Build APK & Create Release
        runs-on: ubuntu-latest
        timeout-minutes: 45

        steps:
            - name: üì• Checkout Repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: üè∑Ô∏è Determine Release Version (pre)
              id: version_info
              run: |
                  if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
                    VERSION="${{ github.event.inputs.version }}"
                  else
                    VERSION="${GITHUB_REF#refs/tags/}"
                  fi
                  echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
                  echo "VERSION_NUMBER=${VERSION#v}" >> $GITHUB_OUTPUT
                  echo "Release version (pre): $VERSION"

            - name: üßæ Read pubspec version
              id: pubspec_version
              run: |
                  PUBSPEC_VERSION_LINE=$(grep -E '^version:' pubspec.yaml)
                  PUBSPEC_VERSION=$(echo "$PUBSPEC_VERSION_LINE" | awk '{print $2}')
                  # Remove any build number (+X) if present for semantic version comparison
                  PUBSPEC_VERSION_NUMBER="${PUBSPEC_VERSION%%+*}"
                  echo "PUBSPEC_VERSION=$PUBSPEC_VERSION" >> $GITHUB_OUTPUT
                  echo "PUBSPEC_VERSION_NUMBER=$PUBSPEC_VERSION_NUMBER" >> $GITHUB_OUTPUT
                  echo "pubspec.yaml version: $PUBSPEC_VERSION (semantic: $PUBSPEC_VERSION_NUMBER)"

            - name: ‚úÖ Validate version bump and match
              run: |
                  set -e
                  EXPECTED="${{ steps.version_info.outputs.VERSION_NUMBER }}"
                  PUBSPEC_VERSION_NUMBER="${{ steps.pubspec_version.outputs.PUBSPEC_VERSION_NUMBER }}"
                  echo "Expected version (from input/tag): $EXPECTED"
                  echo "pubspec.yaml version: $PUBSPEC_VERSION_NUMBER"
                  if [ "$PUBSPEC_VERSION_NUMBER" != "$EXPECTED" ]; then
                    echo "‚ùå Version mismatch. Bump pubspec.yaml to $EXPECTED before running."
                    exit 1
                  fi
                  git fetch --tags --quiet
                  LAST_TAG=$(git tag --list 'v*.*.*' --sort=-v:refname | head -n1)
                  if [ -n "$LAST_TAG" ]; then
                    LAST="${LAST_TAG#v}"
                    if [ "$LAST" = "$EXPECTED" ]; then
                      echo "‚ö†Ô∏è Version $EXPECTED already exists as tag $LAST_TAG."
                      if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
                        echo "‚ÑπÔ∏è Manual dispatch - proceeding with existing tag"
                      else
                        echo "‚ùå Automatic trigger - cannot create duplicate tag. Bump the version."
                        exit 1
                      fi
                    else
                      TOP=$(printf "%s\n%s" "$LAST" "$EXPECTED" | sort -V | tail -n1)
                      if [ "$TOP" != "$EXPECTED" ]; then
                        echo "‚ùå Version $EXPECTED must be greater than last tag $LAST."
                        exit 1
                      fi
                    fi
                  fi
                  echo "‚úÖ Version validation passed."

            - name: ‚òï Set up Java 17
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: "17"

            - name: üê¶ Set up Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: "3.35.2"
                  channel: "stable"
                  cache: true

            - name: üîß Configure Flutter
              run: |
                  flutter config --no-analytics
                  flutter config --no-cli-animations
                  export GRADLE_OPTS="-Xmx4g -XX:+UseG1GC"

            - name: üì¶ Install Dependencies
              run: |
                  flutter pub get
                  flutter pub deps
                  flutter doctor

            - name: üîß Verify Firebase Configuration
              run: |
                  echo "Checking for google-services.json..."
                  if [ ! -f "android/app/google-services.json" ]; then
                    echo "‚ö†Ô∏è google-services.json not found - building without Firebase features"
                    echo "This is normal for CI builds. Firebase features will be limited."
                    echo "To enable full Firebase features, add google-services.json to the repository."
                  else
                    echo "‚úÖ Firebase configuration file found"
                  fi

            - name: üßπ Clean Build
              run: flutter clean

            - name: üî® Build Release APK
              run: |
                  echo "Building release APK..."
                  flutter build apk --release --dart-define=flutter.inspector.structuredErrors=false
                  echo "‚úÖ APK build completed"

            - name: üì± Build App Bundle (AAB)
              run: |
                  echo "Building release App Bundle..."
                  flutter build appbundle --release --dart-define=flutter.inspector.structuredErrors=false
                  echo "‚úÖ App Bundle build completed"

            - name: üìä Get Build Info
              id: build_info
              run: |
                  APK_SIZE=$(du -h build/app/outputs/flutter-apk/app-release.apk | cut -f1)
                  AAB_SIZE=$(du -h build/app/outputs/bundle/release/app-release.aab | cut -f1)

                  # Calculate version code from semantic version for display
                  VERSION="${{ steps.version_info.outputs.VERSION_NUMBER }}"
                  IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
                  VERSION_CODE=$((MAJOR * 10000 + MINOR * 100 + PATCH))

                  echo "APK_SIZE=$APK_SIZE" >> $GITHUB_OUTPUT
                  echo "AAB_SIZE=$AAB_SIZE" >> $GITHUB_OUTPUT
                  echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_OUTPUT
                  echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

            - name: üìù Generate Release Notes
              id: release_notes
              run: |
                  cat > release_notes.md << EOF
                  ## üéâ OfficeLog ${{ steps.version_info.outputs.VERSION }}

                  **Built on:** ${{ steps.build_info.outputs.BUILD_DATE }}

                  ### üì± Download Options
                  - **APK**: ${{ steps.build_info.outputs.APK_SIZE }} - Direct install on Android devices
                  - **AAB**: ${{ steps.build_info.outputs.AAB_SIZE }} - For Google Play Store publishing

                  ### ‚ú® Features
                  - üë§ **AppBar Profile Picture**: Tap for profile management, long press for admin access
                  - üìç **Location-based Attendance**: Automatic check-in/check-out using geofencing
                  - üîÑ **Persistent Auto Check-In**: Background service with WorkManager integration
                  - üîã **Battery Optimization**: Android battery optimization bypass system
                  - üìä **Visual Analytics**: Beautiful charts showing attendance patterns
                  - üìÖ **Calendar Integration**: Monthly view with attendance tracking
                  - üîî **Smart Notifications**: Reminders for check-in/check-out
                  - üåô **Dark Mode**: Modern UI with light/dark theme support
                  - üîê **Google Sign-In**: Secure authentication
                  - ‚òÅÔ∏è **Cloud Sync**: Data synchronized across devices
                  - üõ°Ô∏è **Admin Panel**: Secure admin access with holiday and office management

                  ### üì≤ Installation Instructions
                  1. Download the APK file below
                  2. Enable "Install from unknown sources" in Android settings
                  3. Install the APK on your Android device
                  4. Grant location permissions when prompted
                  5. Sign in with your Google account

                  ### üìã System Requirements
                  - **Android**: 5.0+ (API level 21)
                  - **Permissions**: Location, Internet, Storage
                  - **Account**: Google account for authentication
                  - **Storage**: ~100MB free space

                  ### üîß Technical Details
                  - **Package**: com.matrimpathak.attendence_flutter
                  - **Version Name**: ${{ steps.version_info.outputs.VERSION_NUMBER }}
                  - **Version Code**: ${{ steps.build_info.outputs.VERSION_CODE }} (auto-calculated)
                  - **Built from**: Commit ${{ github.sha }}
                  - **Target SDK**: Android 14 (API 34)
                  - **Minimum SDK**: Android 5.0 (API 21)
                  EOF

            - name: üöÄ Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ steps.version_info.outputs.VERSION }}
                  name: üè¢ OfficeLog ${{ steps.version_info.outputs.VERSION }}
                  body_path: release_notes.md
                  draft: false
                  prerelease: ${{ github.event.inputs.prerelease == 'true' }}
                  files: |
                      build/app/outputs/flutter-apk/app-release.apk
                      build/app/outputs/bundle/release/app-release.aab
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: üìã Upload Build Artifacts
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: build-outputs-${{ steps.version_info.outputs.VERSION }}
                  path: |
                      build/app/outputs/flutter-apk/
                      build/app/outputs/bundle/
                  retention-days: 30
